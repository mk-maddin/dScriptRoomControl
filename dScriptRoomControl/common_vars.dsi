;************************************
;  common_vars.dsi
;
; This file contains definitions for variables
; used by the main program. You can define
; DEVELOPMENT to make all variables volatile.
;
;************************************

const       AppMajor    2                       ; version of this application.
const       AppMinor    1                       ; Note. This is NOT the Firmware version that is on the
const       AppVersion  (AppMajor*256)+AppMinor ; config status screen - that comes from Firmware.

const        NAMESIZE  20       ; typical size for text values
const        IDSIZE    16       ; typical size for IP values
const        CFGSIZE    8       ; typical configuration value size

flint32     initControl         ; rerun init on every AppMajor / AppMinor update
int32       FlashWritePending   ; indicate to config pages that a flash write is pending
int32       SystemCmdUpdated    ; used to tell when webpage updates "System_Cmd"

; config page 1 - Status #################################
string Module[NAMESIZE]
int32 VerMajor
int32 VerMinor
int32 AppVerMajor
int32 AppVerMinor
int32 BrdTemp
int32 Volts

int32   SystemReboot                 ; set by webpage to request a reboot

; config page 2 - Network #################################

; cannot be temporary values / #ifdef DEVELOPMENT
flstring    System_HostName[NAMESIZE]
flstring    System_IP[IDSIZE]
flstring    System_SubNet[IDSIZE]
flstring    System_Gateway[IDSIZE]
flstring    System_DNS1[IDSIZE]
flstring    System_DNS2[IDSIZE]
flint8      System_EnableDHCP

string      DHCPChecked[CFGSIZE]

tcpip.ip        System_IP
tcpip.mask      System_SubNet
tcpip.hostname  System_HostName
tcpip.dns1      System_DNS1
tcpip.dns2      System_DNS2
tcpip.gateway   System_Gateway
tcpip.dhcp      System_EnableDHCP

; config page 3 - TCP/IP #################################
#ifdef DEVELOPMENT
    int8        System_Cmd
    int32       System_TcpPort
    string      System_AES_key[33]
    string      App_dScriptServer[NAMESIZE]

    int32       System_ModbusUID
    int8        System_ModbusBaud
    int8        System_ModbusParity  
#else
;#ifdef NORMAL
    flint8      System_Cmd                      ; set tcp/ip communication protocol ( 1=Modbus; 2=ASCII; 3=Binary ; 4=BinaryAES ) currently supported only 2 & 3
    flint32     System_TcpPort                  ; port used for tcp/ip communication (default=17123; default modbus=502) - used as dScriptServer listening port,too
    flstring    System_AES_key[33]              ; encryption key for BinaryAES mode; This MUST be 32 characters long.   
    eestring    App_dScriptServer[NAMESIZE]     ; the dScriptServer hostname/ip to send TCP/IP status update messages to

    flint32     System_ModbusUID
    flint8      System_ModbusBaud
    flint8      System_ModbusParity
#endif

string AsciiChecked[CFGSIZE]
string ModBusChecked[CFGSIZE]
string BinaryChecked[CFGSIZE]
string AESChecked[CFGSIZE]

tcpip.port  System_TcpPort
aes.key     System_AES_key
clientport  dScriptServer App_dScriptServer System_TcpPort 3000

; config page 4 - Webpage Security #################################

#ifdef DEVELOPMENT
    int8      System_EnablePW
    string    System_Password[NAMESIZE]
    eeint32     System_HttpPort             ;needs to be always eeint32 value for webpage to work
#else
;#ifdef NORMAL
    flint8      System_EnablePW
    flstring    System_Password[NAMESIZE]
    eeint32     System_HttpPort
#endif

string      PWChecked[CFGSIZE]

html.password   System_Password
html.port       System_HttpPort
html.setup      System_EnablePW

; config page 7 - Input / Output #################################

#ifdef DEVELOPMENT
    int32 App_EnableAutoIO

    int8        App_IOType1
    int8        App_IOType2
    int8        App_IOType3
    int8        App_IOType4
    int8        App_IOType5
    int8        App_IOType6
    int8        App_IOType7
    int8        App_IOType8
    
    string      App_IOSet1[NAMESIZE]
    string      App_IOSet2[NAMESIZE]
    string      App_IOSet3[NAMESIZE]
    string      App_IOSet4[NAMESIZE]
    string      App_IOSet5[NAMESIZE]
    string      App_IOSet6[NAMESIZE]
    string      App_IOSet7[NAMESIZE]
    string      App_IOSet8[NAMESIZE]
#else
;#ifdef NORMAL
    eeint8 App_EnableAutoIO             ; is IO input type defined automatically ( 0 = false; 1 = true)
    
    eeint8        App_IOType1           ; sets the IO input type (0 = Auto Type; 1 = Light; 2 = Shutter; 3 = Socket; 4 = Motion)
    eeint8        App_IOType2
    eeint8        App_IOType3
    eeint8        App_IOType4
    eeint8        App_IOType5
    eeint8        App_IOType6
    eeint8        App_IOType7
    eeint8        App_IOType8                

    eestring  App_IOSet1[NAMESIZE]     ; variables to hold csv list of light / shutter / switch / motion IDs to turn on in case of IO input
    eestring  App_IOSet2[NAMESIZE]
    eestring  App_IOSet3[NAMESIZE]
    eestring  App_IOSet4[NAMESIZE]
    eestring  App_IOSet5[NAMESIZE]
    eestring  App_IOSet6[NAMESIZE]
    eestring  App_IOSet7[NAMESIZE]
    eestring  App_IOSet8[NAMESIZE]
#endif         

string  AutoIOChecked[CFGSIZE]          ; web value if IO iput type is defined automatically

int32   App_IOCtr1                      ;counter values to follow up multi button press commands
int32   App_IOCtr2 
int32   App_IOCtr3
int32   App_IOCtr4
int32   App_IOCtr5
int32   App_IOCtr6
int32   App_IOCtr7
int32   App_IOCtr8

; config page 98 - Shutters #################################

#ifdef DEVELOPMENT
    int8 App_ShutterType1                  
    int8 App_ShutterType2                  
    int8 App_ShutterType3                  
    int8 App_ShutterType4                  
    int8 App_ShutterType5                  
    int8 App_ShutterType6                  
    int8 App_ShutterType7                  
    int8 App_ShutterType8                  
    int8 App_ShutterType9                  
    int8 App_ShutterType10                 
    int8 App_ShutterType11                 
    int8 App_ShutterType12                 
    int8 App_ShutterType13                 
    int8 App_ShutterType14                 
    int8 App_ShutterType15                 
    int8 App_ShutterType16

    int32 App_ShutterCT1
    int32 App_ShutterCT2
    int32 App_ShutterCT3
    int32 App_ShutterCT4
    int32 App_ShutterCT5
    int32 App_ShutterCT6
    int32 App_ShutterCT7
    int32 App_ShutterCT8
    int32 App_ShutterCT9
    int32 App_ShutterCT10
    int32 App_ShutterCT11
    int32 App_ShutterCT12
    int32 App_ShutterCT13
    int32 App_ShutterCT14
    int32 App_ShutterCT15
    int32 App_ShutterCT16
#else
;#ifdef NORMAL
    eeint8 App_ShutterType1                 ; sets the type of shutter for correct functions - to be implemented ( 0 = auto; 1 = roller; 2 = raffstore; 3 = jealousy )
    eeint8 App_ShutterType2
    eeint8 App_ShutterType3
    eeint8 App_ShutterType4
    eeint8 App_ShutterType5
    eeint8 App_ShutterType6
    eeint8 App_ShutterType7
    eeint8 App_ShutterType8
    eeint8 App_ShutterType9
    eeint8 App_ShutterType10
    eeint8 App_ShutterType11
    eeint8 App_ShutterType12
    eeint8 App_ShutterType13
    eeint8 App_ShutterType14
    eeint8 App_ShutterType15
    eeint8 App_ShutterType16

    eeint32 App_ShutterCT1                 ; time it takes until shutter is fully closed from fully open
    eeint32 App_ShutterCT2
    eeint32 App_ShutterCT3
    eeint32 App_ShutterCT4
    eeint32 App_ShutterCT5
    eeint32 App_ShutterCT6
    eeint32 App_ShutterCT7
    eeint32 App_ShutterCT8
    eeint32 App_ShutterCT9
    eeint32 App_ShutterCT10
    eeint32 App_ShutterCT11
    eeint32 App_ShutterCT12
    eeint32 App_ShutterCT13
    eeint32 App_ShutterCT14
    eeint32 App_ShutterCT15
    eeint32 App_ShutterCT16
#endif

; config page 99 - Entities #################################

#ifdef DEVELOPMENT
    int32   App_ClickSleep             
    int8    App_Lights                      
    int8    App_Shutters                    
    int8    App_LightsOffset
    int8    App_ShutterRelayCT        
#else
;#ifdef NORMAL
    eeint32   App_ClickSleep                ; wait time for input clicks to complete for multi click handling
    eeint8    App_Lights                    ; number of lights connected to relays
    eeint8    App_Shutters                  ; number of shutters connected to relays
    eeint8    App_LightsOffset              ; relay number where light connections begin (e.g. 10 means first light is at 10 relay, second light at 9 relay, third at 8 etc.)
    eeint8    App_ShutterRelayCT            ; define how relays for shutter are connected - parallel (one for up / one for down) or in row (one for moving / one for direction - up/down)
#endif

int8    App_Motions               ; number of motion sensors connected to I/O
int8    App_Sockets               ; number of sockets connected to relays ( =physical_relays-(light_relays+shutter_relays)) )

int32 App_EntityCountsUpdated   ; used to tell when webpage updates the number of lights or shutters
int8 App_IOActive[CFGSIZE]      ;tracking values to check which pyhsical inputs are active and which are not

; general helping variables #################################
int32   x
int32   Zero

; tcp/ip communication variables #################################

int32   tcpLength
string  tcpInBuf[1024]
string  tcpOutBuf[500]

int32   Nonce
int32   NonceIn

; application working variables #################################

#ifdef DEVELOPMENT
    int8  App_ShutterLevels[IDSIZE]
#else
;#ifdef NORMAL
    eeint8    App_ShutterLevels[IDSIZE] ; to restore shutter closed/open level after power outage  ( 100 = fully open; 0 = fully closed)
#endif

string  System_MAC[6]           ; MAC address of the devices ehternet port
string  System_MACString[17]    ; MAC address in common string format 00:00:00:00:00:00
string  App_Message[32]         ; status message output
int32   App_Debug                 ; variable to temporary store values and show them on app page (for Debug help)

int8 App_ShutterLevel1
int8 App_ShutterLevel2
int8 App_ShutterLevel3
int8 App_ShutterLevel4
int8 App_ShutterLevel5
int8 App_ShutterLevel6
int8 App_ShutterLevel7
int8 App_ShutterLevel8
int8 App_ShutterLevel9
int8 App_ShutterLevel10
int8 App_ShutterLevel11
int8 App_ShutterLevel12
int8 App_ShutterLevel13
int8 App_ShutterLevel14
int8 App_ShutterLevel15
int8 App_ShutterLevel16

int32   App_WebInput              ; variable to identify a web input has happened
string  App_InpType[CFGSIZE]      ; variable writing the input type to webpage information input

int8  App_RaffstoreIOs[IDSIZE]      ; stores the IO which is machted to a specific raffstore on demand
int8  App_ShutterStates[IDSIZE]     ; stores the current status of shutters (0 = stopped; 1 = opening; 2 = closing)
int8  App_ShutterTLevels[IDSIZE]    ; stores the "to be" level of a shutter ( 100 = fully open; 0 = fully closed)
int8  App_ShutterCLevels[IDSIZE]    ; stores the current level of a shutter to prevent a lot of eeprom writings while moving ( 100 = fully open; 0 = fully closed)
